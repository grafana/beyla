name: Generate eBPF Binaries

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag to generate eBPF binaries for'
        required: true
        type: string

jobs:
  generate-ebpf-binaries:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || github.event.inputs.tag_name }}
          fetch-depth: 0

      - name: Generate eBPF binaries
        run: make docker-generate

      - name: Check for changes
        id: git-check
        run: |
          if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"

      - name: Commit and push generated binaries
        if: steps.git-check.outputs.changes == 'true'
        env:
          RELEASE_TAG: ${{ github.event.release.tag_name || github.event.inputs.tag_name }}
        run: |
          git add -A
          git commit -m "chore: generate eBPF binaries for release ${RELEASE_TAG}"
          
          # Try to push directly first
          if git push; then
            echo "Successfully pushed changes"
          else
            # If direct push fails, create a branch and push that
            # Use sed to sanitize the tag name for branch naming
            safe_tag=$(echo "${RELEASE_TAG}" | sed 's/[^a-zA-Z0-9._-]/-/g')
            branch_name="update-binaries-for-${safe_tag}"
            git checkout -b "${branch_name}"
            git push -u origin "${branch_name}"
            echo "Created branch ${branch_name} with changes"
          fi