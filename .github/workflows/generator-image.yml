name: Publish Beyla Docker Generator Image
on:
  workflow_dispatch:
  push:
    branches: [ 'main', 'release-*' ]

# Set restrictive permissions at workflow level
permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: grafana/beyla-generator

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # compute VERSION = "x.y" if branch is release-x.y, otherwise "main"
    env:
      VERSION: ${{ startsWith(github.ref, 'refs/heads/release-') && substring(github.ref, 19) || 'main' }}

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          persist-credentials: 'false'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"

      - name: Get current timestamp
        id: timestamp
        run: echo "::set-output name=ts::$(date +'%Y%m%d%H%M')"
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          file: ./generator.Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.timestamp.outputs.ts }}"
            "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
