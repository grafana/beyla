name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:

  workflow_call:
    inputs:
      filter_regex_include:
        description: this sets the scope of the super linter
        default: "charts/beyla/"
        required: false
        type: string

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set restrictive permissions at workflow level
permissions:
  contents: read

env:
  CT_CONFIGFILE: "${{ github.workspace }}/.github/configs/ct.yml"
  INTEGRARION_TESTS_DIR: "charts/beyla/tests/integration"

jobs:
  lint-helm-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: 'false'
          fetch-depth: 0 # required for chart-testing to work

      - name: Regenerate docs
        run: |
          docker run --rm \
            -v "$(pwd)/deployments/helm:/helm-docs" \
            -u "$(id -u)" \
            jnorwood/helm-docs
          if ! git diff --exit-code; then
            echo "Helm chart documentation is not up to date. Please run 'helm-docs' and commit changes!" >&2
            exit 1
          fi

      - name: Set up Linting with chart-testing
        uses: helm/chart-testing-action@5f16c27cf7a4fa9c776ff73734df3909b2b65127 # v2.1.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Linting with chart-testing
        run: ct lint --config "${CT_CONFIGFILE}"

  list-integration-tests:
    name: List integration tests
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.list_tests.outputs.tests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: 'false'

      - name: List tests
        id: list_tests
        working-directory: "${{ env.INTEGRARION_TESTS_DIR }}"
        env:
          LABELS: ${{ toJson(github.event.pull_request.labels.*.name) }}
        run: |
          tests=$(find . -name test-plan.yaml -exec dirname {} \; | sed -e "s/^\.\///g")
          echo "Tests: ${tests}"
          echo "tests=$(echo "${tests}" | jq --raw-input --slurp --compact-output 'split("\n") | map(select(. != ""))')" >> "${GITHUB_OUTPUT}"

  run-integration-tests:
    name: Integration Test
    needs: list-integration-tests
    runs-on: ubuntu-latest
    if: needs.list-integration-tests.outputs.tests != '[]'
    strategy:
      matrix:
        test: ${{ fromJson(needs.list-integration-tests.outputs.tests) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # v4.3.0
        with:
          path: source
          persist-credentials: 'false'

      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # v4.3.0
        with:
          path: helm-chart-toolbox
          repository: grafana/helm-chart-toolbox
          persist-credentials: 'false'

      - name: Set up Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4  # v4.3.1

      - name: Install Flux CLI
        uses: fluxcd/flux2/action@6bf37f6a560fd84982d67f853162e4b3c2235edb  # v2.6.4

      - name: Install Kind CLI
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3  # v1.12.0
        with:
          install_only: true

      - name: Install Minikube CLI
        uses: medyagh/setup-minikube@e3c7f79eb1e997eabccc536a6cf318a2b0fe19d9  # v0.0.20
        with:
          start: false

      - name: Run test
        run: helm-chart-toolbox/tools/helm-test/helm-test "${TEST_DIRECTORY}"
        env:
          TEST_DIRECTORY: "source/${{ env.INTEGRARION_TESTS_DIR }}/${{ matrix.test }}"
          DELETE_CLUSTER: true
