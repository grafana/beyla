name: Port to Upstream OTel eBPF Instrumentation

on:
  pull_request:
    types: [opened, synchronize, labeled, closed]

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  port-to-upstream:
    if: |
      github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Get secrets from Vault
        id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@main
        with:
          repo_secrets: |
            GITHUB_APP_ID=github-app:app-id
            GITHUB_APP_INSTALLATION_ID=github-app:app-installation-id
            GITHUB_APP_PRIVATE_KEY=github-app:private-key
      - name: Checkout Beyla
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Generate App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ env.GITHUB_APP_ID }}
          private-key: ${{ env.GITHUB_APP_PRIVATE_KEY }}
          installation-id: ${{ env.GITHUB_APP_INSTALLATION_ID }}
          owner: grafana
          
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: grafana/opentelemetry-ebpf-instrumentation
          token: ${{ steps.app-token.outputs.token }}
          path: opentelemetry-ebpf-instrumentation          
          
      - name: Port changes and prepare PR
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          BRANCH_NAME: port/${{ github.event.pull_request.number }}-to-upstream
        run: |
          # Navigate to the target repository
          cd opentelemetry-ebpf-instrumentation
          
          # Configure git locally
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions Bot"
          
          # Create a new branch
          git checkout -b ${BRANCH_NAME}
          
          # Add and commit the changes
          git add .
          git commit -m "[port] #${PR_NUMBER}: ${PR_TITLE}
          
          Automated port of #${PR_NUMBER} from grafana/beyla.
          Original PR: ${PR_URL}"
          
          # Push changes to the fork repository
          git push origin "refs/heads/${BRANCH_NAME}" --force
          
          # Create PR to upstream repository
          PR_URL=$(gh pr create \
            --title "[port] #${PR_NUMBER}: ${PR_TITLE}" \
            --body "Automated port of #${PR_NUMBER} from grafana/beyla.
            
            Original PR: ${PR_URL}" \
            --repo open-telemetry/opentelemetry-ebpf-instrumentation \
            --head grafana:${BRANCH_NAME} \
            --base main \
            --draft)
          
          echo "upstream_pr_url=${PR_URL}" >> $GITHUB_OUTPUT
          echo "upstream_pr_number=$(basename ${PR_URL})" >> $GITHUB_OUTPUT
          
      # - name: Create PR to upstream repo
      #   env:
      #     GH_TOKEN: ${{ steps.app-token.outputs.token }}
      #   run: |
      #     gh pr create \
      #       --title "[port] #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}" \
      #       --body "Automated port of #${{ github.event.pull_request.number }} from grafana/beyla." \
      #       --repo open-telemetry/opentelemetry-ebpf-instrumentation \
      #       --head grafana:port/${{ github.event.pull_request.number }}-to-upstream \
      #       --base main \
      #       --draft
