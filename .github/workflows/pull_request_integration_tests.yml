name: Pull request integration tests

on:
  push:
    branches: ["main", "release-*"]
  pull_request:
    branches: ["main", "release-*"]

# Set restrictive permissions at workflow level
permissions:
  contents: read

jobs:
  test-matrix:
    name: "Build integration matrix"
    runs-on: ubuntu-x64-small
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: build matrix
        id: build-matrix
        env:
          PARTITIONS: 10
          TEST_TAGS: integration
        run: |
          echo -n "matrix=" >> $GITHUB_OUTPUT
          make integration-test-matrix-json >> $GITHUB_OUTPUT

  test:
    name: ${{ matrix.description }}
    needs: test-matrix
    runs-on: ubuntu-latest
    # Grant specific permissions needed only for this job
    permissions:
      contents: read
      pull-requests: write
      # required for CODECOV token
      id-token: write
      checks: write
      # Required for uploading artifacts
      actions: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.test-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "go.mod"
          cache: false

      - name: Generate files
        run: make prereqs vendor-obi

      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@v1.12.3

      - name: Check disk usage before tests
        run: df -h

      - name: Run integration tests
        timeout-minutes: 35
        env:
          # zizmor template-injection fixes: pass data as env vars
          MATRIX_ID: ${{ matrix.id }}
          MATRIX_JSON: ${{ toJson(matrix) }}
          MATRIX_TEST_PATTERN: ${{ matrix.test_pattern }}
          RUN_NUMBER: ${{ github.run_number }}
          TEST_TAGS: integration
        run: |
          echo Partition
          echo "${MATRIX_JSON}"

          if [ -z "${MATRIX_TEST_PATTERN}" ]; then
            echo "Error: Test pattern is empty for shard $MATRIX_ID"
            exit 1
          fi

          mkdir reports

          ~/go/bin/gotestsum -ftestname \
              --jsonfile=reports/test-run-"${RUN_NUMBER}"-"${MATRIX_ID}".log \
              -- -race -tags=${TEST_TAGS} -timeout 30m \
              -mod vendor \
              -run="^(${MATRIX_TEST_PATTERN})$" ./internal/test/integration/...

      - name: Process coverage data
        run: make itest-coverage-data

      - id: get-codecov-token
        uses: grafana/shared-workflows/actions/get-vault-secrets@9f37f656e063f0ad0b0bfc38d49894b57d363936 # get-vault-secrets/v1.2.1
        continue-on-error: true
        with:
          # Secrets placed in the ci/repo/grafana/beyla/codecov path in Vault
          repo_secrets: |
            CODECOV_TOKEN=codecov:token

      - name: Report coverage
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: ./testoutput/itest-covdata.txt
          flags: integration-test

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: go-test-reports-${{ github.run_number }}-${{ matrix.id }}
          path: reports/*.log
          retention-days: 5

      - name: Upload test logs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: go-test-logs-${{ github.run_number }}-${{ matrix.id }}
          path: |
            testoutput/*.log
            testoutput/kind

      - name: Check final disk usage
        if: always()
        run: df -h
