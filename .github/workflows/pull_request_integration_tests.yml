name: Pull request integration tests

on:
  pull_request:
    types: [opened, synchronize, reopened]

# Set restrictive permissions at workflow level
permissions:
  contents: read

jobs:
  # Reference the security-check workflow
  security-check:
    uses: ./.github/workflows/security-check.yml
    permissions:
      contents: read
      issues: write
      pull-requests: write
    secrets: inherit
    
  test:
    name: test
    # Add dependency on security-check
    needs: [security-check]
    # Simple condition: Run only on PRs where security-check outputs security_cleared=true
    if: ${{ needs.security-check.outputs.security_cleared == 'true' }}
    runs-on: ubuntu-latest-8-cores
    # Grant specific permissions needed only for this job
    permissions:
      contents: read
      pull-requests: write
    strategy:
      matrix:
        go: [ '1.24' ]
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
        with:
          cache: false  # Disable caching to avoid extraction conflicts
          go-version: ${{ matrix.go }}
      - name: Clean up disk space
        run: |
          docker system prune -af
          docker volume prune -f
      - name: Run integration tests
        run: make docker-generate integration-test
        timeout-minutes: 60
      - name: Upload integration test logs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: Test Logs
          path: |
            testoutput/*.log
            testoutput/kind
      - name: Report coverage
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: ./testoutput/itest-covdata.txt
          flags: integration-test
