name: Pull request K8s integration tests

on:
  push:
    branches: [ 'main', 'release-*' ]
  pull_request:
    branches: [ 'main', 'release-*' ]

# Set restrictive permissions at workflow level
permissions:
  contents: read

jobs:
  test:
    name: test
    runs-on: ubuntu-latest-8-cores
    # Grant specific permissions needed only for this job
    permissions:
      contents: read
      pull-requests: write
      # required for CODECOV token
      id-token: write
    strategy:
      matrix:
        go: [ '1.24' ]
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@be3c94b385c4f180051c996d336f57a34c397495 # v3
        with:
          cache: false  # Disable caching to avoid extraction conflicts
          go-version: ${{ matrix.go }}
      - name: Clean up disk space
        run: |
          docker system prune -af
          docker volume prune -f
      - name: Run integration tests
        run: make docker-generate integration-test-k8s
        timeout-minutes: 60
      - name: Upload integration test logs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: K8s test Logs
          path: |
            testoutput/*.log
            testoutput/kind
      - id: get-codecov-token
        uses: grafana/shared-workflows/actions/get-vault-secrets@get-vault-secrets/v1.2.1
        continue-on-error: true
        with:
          # Secrets placed in the ci/repo/grafana/beyla/codecov path in Vault
          repo_secrets: |
            CODECOV_TOKEN=codecov:token
      - name: Report coverage
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4
        continue-on-error: true
        with:
          file: ./testoutput/itest-covdata.txt
          flags: k8s-integration-test
