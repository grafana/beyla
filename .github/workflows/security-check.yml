name: security-check

on:
  workflow_call:
    outputs:
      security_cleared:
        description: "Whether the PR passed security checks"
        value: ${{ jobs.security-gate.outputs.security_cleared }}
  pull_request:
    types: [opened, synchronize, reopened]

# Set permissions at workflow level
permissions:
  contents: read
  issues: write 
  pull-requests: write
  # Adding more specific permissions to help with PR comments
  discussions: write
  statuses: write

jobs:
  security-gate:
    name: External Contribution Security Review
    runs-on: ubuntu-latest
    outputs:
      security_cleared: ${{ steps.check.outputs.security_cleared }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for security concerns
        id: check
        shell: bash
        env:
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          REPO: ${{ github.repository }}
          REPO_OWNER: ${{ github.repository_owner }}
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Default to true for push events and workflow_call without PR context
          if [ -z "${PR_AUTHOR}" ]; then
            echo "No PR author found, assuming this is a push or workflow_call"
            echo "security_cleared=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "Checking security for PR author: ${PR_AUTHOR}"
          
          # Check if user is in MAINTAINERS.md
          if grep -q "@${PR_AUTHOR}" MAINTAINERS.md; then
            echo "PR author is listed in MAINTAINERS.md"
            echo "security_cleared=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check if PR author is a collaborator
          if gh api "repos/${REPO}/collaborators/${PR_AUTHOR}" --silent 2>/dev/null; then
            echo "PR author is a repository collaborator"
            echo "security_cleared=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check if user is an org member
          if gh api "orgs/${REPO_OWNER}/members/${PR_AUTHOR}" --silent 2>/dev/null; then
            echo "PR author is an organization member"
            echo "security_cleared=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "PR is from external contributor, checking modified files..."
          
          # Get the files changed in the PR
          CHANGED_FILES=$(git diff --name-only "${BASE_SHA}" "${HEAD_SHA}")
          echo "Files changed in this PR:"
          echo "${CHANGED_FILES}"
          echo ""
          
          MODIFIED_FILES=""
          
          # Check for modifications to sensitive files - processing each file individually
          while read -r file; do
            if [[ "$file" =~ ^\.github/ ]]; then
              MODIFIED_FILES="${MODIFIED_FILES} .github/ directory,"
              echo "Sensitive file detected: $file (.github/ directory)"
            elif [[ "$file" =~ ^tools/ ]]; then
              MODIFIED_FILES="${MODIFIED_FILES} tools/ directory,"
              echo "Sensitive file detected: $file (tools/ directory)"
            elif [[ "$file" == "cmd/beyla-genfiles/beyla_genfiles.go" ]]; then
              MODIFIED_FILES="${MODIFIED_FILES} beyla_genfiles.go,"
              echo "Sensitive file detected: $file (beyla_genfiles.go)"
            elif [[ "$file" == "Makefile" ]]; then
              MODIFIED_FILES="${MODIFIED_FILES} Makefile,"
              echo "Sensitive file detected: $file (Makefile)"
            fi
          done <<< "${CHANGED_FILES}"
          
          # Remove trailing comma if any
          MODIFIED_FILES=$(echo "$MODIFIED_FILES" | sed 's/,$//g')
          
          if [ -n "$MODIFIED_FILES" ]; then
            echo "Sensitive files were modified by external contributor"
            echo "security_cleared=false" >> $GITHUB_OUTPUT
            echo "modified_files=${MODIFIED_FILES}" >> $GITHUB_OUTPUT
          else
            echo "No sensitive files were modified by external contributor"
            echo "security_cleared=true" >> $GITHUB_OUTPUT
          fi

      - name: Post comment for security review needed
        if: steps.check.outputs.security_cleared == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const modifiedFiles = '${{ steps.check.outputs.modified_files }}';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## ⚠️ Security Review Required ⚠️
              
              Thank you for your contribution! 
              
              As you're not a repository collaborator, this PR requires a security review because it modifies sensitive files:
              - ${modifiedFiles}
              
              These files can affect the project's build system, CI/CD workflows, or other security-sensitive areas. All workflows have been blocked until a maintainer reviews these changes.
              
              **Note to maintainers:** Please review these changes carefully before approving the PR.`
            });