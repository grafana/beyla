name: security-check

on:
  workflow_call:
    outputs:
      security_cleared:
        description: "Whether the PR passed security checks"
        value: ${{ jobs.security-gate.outputs.security_cleared }}
  pull_request:
    types: [opened, synchronize, reopened]

# Set permissions at workflow level
permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  security-gate:
    name: External Contribution Security Review
    runs-on: ubuntu-latest
    outputs:
      security_cleared: ${{ steps.check.outputs.security_cleared }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for security concerns
        id: check
        shell: bash
        env:
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          REPO: ${{ github.repository }}
          REPO_OWNER: ${{ github.repository_owner }}
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Default to true for push events and workflow_call without PR context
          if [ -z "${PR_AUTHOR}" ]; then
            echo "No PR author found, assuming this is a push or workflow_call"
            echo "security_cleared=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "Checking security for PR author: ${PR_AUTHOR}"
          
          # SIMULATION: Force external contributor mode for testing
          echo "SIMULATION: Treating PR author as external contributor for testing"
          IS_COLLABORATOR=false
          
          # Get the files changed in the PR
          CHANGED_FILES=$(git diff --name-only "${BASE_SHA}" "${HEAD_SHA}")
          MODIFIED_FILES=""
          
          # Check for modifications to sensitive files
          if echo "$CHANGED_FILES" | grep -q -E '^\.github/'; then
            MODIFIED_FILES="${MODIFIED_FILES} .github/ directory,"
          fi
          if echo "$CHANGED_FILES" | grep -q -E '^tools/'; then
            MODIFIED_FILES="${MODIFIED_FILES} tools/ directory,"
          fi
          if echo "$CHANGED_FILES" | grep -q -E 'cmd/beyla-genfiles/beyla_genfiles\.go'; then
            MODIFIED_FILES="${MODIFIED_FILES} beyla_genfiles.go,"
          fi
          if echo "$CHANGED_FILES" | grep -q -E '^Makefile$'; then
            MODIFIED_FILES="${MODIFIED_FILES} Makefile,"
          fi
          
          # Remove trailing comma if any
          MODIFIED_FILES=$(echo "$MODIFIED_FILES" | sed 's/,$//g')
          
          if [ -n "$MODIFIED_FILES" ]; then
            echo "Sensitive files were modified by external contributor"
            echo "SIMULATION: Security check would block this PR due to sensitive files: ${MODIFIED_FILES}"
            echo "security_cleared=false" >> $GITHUB_OUTPUT
            echo "modified_files=${MODIFIED_FILES}" >> $GITHUB_OUTPUT
          else
            echo "No sensitive files were modified by external contributor"
            echo "SIMULATION: Security check would allow this PR since no sensitive files were modified"
            echo "security_cleared=true" >> $GITHUB_OUTPUT
          fi

      - name: Post comment for security review needed
        if: steps.check.outputs.security_cleared == 'false'
        run: |
          echo "SIMULATION: Would post a security review comment on the PR"
          echo "Security review required for sensitive files: ${{ steps.check.outputs.modified_files }}"