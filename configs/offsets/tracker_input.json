{
  "go": {
    "versions": ">= 1.17",
    "inspect": "./configs/offsets/std_inspect.go",
    "fields": {
      "net/http.Request": [
        "Method",
        "URL",
        "ContentLength",
        "Header"
      ],
      "net/url.URL": [
        "Path"
      ],
      "net/http.Response": [
        "StatusCode"
      ],
      "net.TCPAddr": [
        "IP",
        "Port"
      ],
      "context.valueCtx": [
        "val"
      ],
      "bufio.Writer": [
        "buf",
        "n"
      ],
      "vendor/golang.org/x/net/http2/hpack.Encoder": [
        "w"
      ],
      "net.TCPConn": [
        "conn" 
      ],
      "net.conn": [
        "fd" 
      ],
      "net.netFD": [
        "laddr",
        "raddr"
      ],
      "net/http.persistConn": [
        "conn",
        "tlsState"
      ],
      "net/http.conn": [
        "rwc",
        "tlsState"
      ]
    }
  },
  "golang.org/x/net": {
    "inspect": "./configs/offsets/http2/inspect.go",
    "versions": ">= 0.12.0",
    "fields": {
      "golang.org/x/net/http2/hpack.Encoder": [
        "w"
      ],
      "golang.org/x/net/http2.ClientConn": [
        "nextStreamID",
        "tconn"
      ],
      "golang.org/x/net/http2.Framer": [
        "w"
      ],
      "golang.org/x/net/http2.serverConn": [
        "conn"
      ]
    }
  },  
  "google.golang.org/grpc": {
    "versions": ">= 1.40",
    "fields": {
      "google.golang.org/grpc/internal/transport.Stream": [
        "method",
        "st",
        "ctx"
      ],
      "google.golang.org/grpc/internal/status.Status": [
        "s"
      ],
      "google.golang.org/grpc/internal/transport.http2Server": [
        "conn"
      ],
      "google.golang.org/grpc/internal/transport.http2Client": [
        "nextID",
        "conn",
        "scheme"
      ],
      "google.golang.org/grpc/internal/transport.bufWriter": [
        "buf",
        "offset"
      ]
    }
  },
  "google.golang.org/genproto": {
    "branch": "main",
    "packages": [
      "google.golang.org/genproto/googleapis/rpc/status"
    ],
    "fields": {
      "google.golang.org/genproto/googleapis/rpc/status.Status": [
        "Code"
      ]
    }
  },
  "github.com/IBM/sarama": {
    "inspect": "./configs/offsets/sarama/inspect.go",
    "versions": ">= 1.40",
    "fields": {
      "github.com/IBM/sarama.Broker": [
        "correlationID",
        "conn"
      ],
      "github.com/IBM/sarama.responsePromise": [
        "correlationID"
      ],
      "github.com/IBM/sarama.bufConn": [
        "Conn"
      ]
    }
  },
  "github.com/Shopify/sarama": {
    "inspect": "./configs/offsets/shopify/inspect.go",
    "versions": ">= 1.37, < 1.40",
    "fields": {
      "github.com/Shopify/sarama.Broker": [
        "correlationID",
        "conn"
      ],
      "github.com/Shopify/sarama.responsePromise": [
        "correlationID"
      ],
      "github.com/Shopify/sarama.bufConn": [
        "Conn"
      ]
    }
  },
  "github.com/redis/go-redis/v9": {
    "inspect": "./configs/offsets/redis/inspect.go",
    "versions": ">= v9.0.0",
    "fields": {
      "github.com/redis/go-redis/v9/internal/pool.Conn": [
        "bw"
      ]
    }
  },
  "github.com/segmentio/kafka-go": {
    "inspect": "./configs/offsets/kafkago/inspect.go",
    "versions": ">= v0.4.11",
    "fields": {
      "github.com/segmentio/kafka-go.Writer": [
        "Topic"
      ],
      "github.com/segmentio/kafka-go/protocol.Conn": [
        "conn"
      ],
      "github.com/segmentio/kafka-go.reader": [
        "topic"
      ]
    }
  }
}
