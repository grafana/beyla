version: "3.8"

services:
  nodeserver:
    build:
      context: ../..
      dockerfile: test/integration/components/nodemultiproc/Dockerfile
    image: nodemultiproc
    ports:
      - "5000:5000"
      - "5001:5001"
      - "5002:5002"
      - "5003:5003"
    environment:
      LOG_LEVEL: DEBUG
    depends_on:
      otelcol:
        condition: service_started
      jaeger:
        condition: service_started

  autoinstrumenter:
    build:
      context: ../..
      dockerfile: ./test/integration/components/beyla/Dockerfile
    command:
      - --config=/configs/instrumenter-config-discovery.yml
    volumes:
      - ./configs/:/configs
      - ./system/sys/kernel/security:/sys/kernel/security
      - ../../testoutput:/coverage
      - ../../testoutput/run-multi:/var/run/beyla
    image: hatest-autoinstrumenter
    privileged: true # in some environments (not GH Pull Requests) you can set it to false and then cap_add: [ SYS_ADMIN ]
    pid: "host"
    environment:
      GOCOVERDIR: "/coverage"
      BEYLA_OTEL_METRICS_FEATURES: "application,application_span"
      BEYLA_TRACE_PRINTER: "text"
      BEYLA_METRICS_INTERVAL: "10ms"
      BEYLA_BPF_BATCH_TIMEOUT: "10ms"
      BEYLA_OTLP_TRACES_BATCH_TIMEOUT: "1ms"
      BEYLA_LOG_LEVEL: "DEBUG"
      BEYLA_BPF_DEBUG: "TRUE"
      BEYLA_HOSTNAME: "beyla"
      BEYLA_INTERNAL_METRICS_PROMETHEUS_PORT: 8999
      BEYLA_INTERNAL_METRICS_PROMETHEUS_PATH: /metrics
      BEYLA_BPF_DISABLE_BLACK_BOX_CP: "${BEYLA_BPF_DISABLE_BLACK_BOX_CP}"
      BEYLA_BPF_CONTEXT_PROPAGATION: "${BEYLA_BPF_CONTEXT_PROPAGATION}"
      BEYLA_BPF_TRACK_REQUEST_HEADERS: "${BEYLA_BPF_TRACK_REQUEST_HEADERS}"
      BEYLA_BPF_HIGH_REQUEST_VOLUME: 1
    ports:
      - "8999:8999"

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.104.0@sha256:e07e325e303e86f4a87a617491e921b579a92da6d404007394757ac910bf9587
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: ["--config=/etc/otelcol-config/otelcol-config-4017.yml"]
    volumes:
      - ./configs/:/etc/otelcol-config
    ports:
      - "4017" # OTLP over gRPC receiver
      - "4018:4018" # OTLP over HTTP receiver
      - "9464" # Prometheus exporter
      - "8888" # metrics endpoint
    depends_on:
      prometheus:
        condition: service_started

  # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.55.1@sha256:2659f4c2ebb718e7695cb9b25ffa7d6be64db013daba13e05c875451cf51b0d3
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus-config.yml
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --log.level=debug
    volumes:
      - ./configs/:/etc/prometheus
    ports:
      - "9090:9090"

  jaeger:
    image: jaegertracing/all-in-one:1.57@sha256:8f165334f418ca53691ce358c19b4244226ed35c5d18408c5acf305af2065fb9
    ports:
      - "16686:16686" # Query frontend
      - "4317:4317" # OTEL GRPC traces collector
      - "4318:4318" # OTEL HTTP traces collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
