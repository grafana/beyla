version: "3.8"

services:
  nginx:
    image: nginx:latest@sha256:029d4461bd98f124e531380505ceea2072418fdf28752aa73b7b273ba3048903
    mem_limit: 128m
    container_name: hatest-nginx
    ports:
      - "8080:80"
    volumes:
      - ./components/php/nginx.conf:/etc/nginx/nginx.conf
      - nginx_socket:/var/run/
    depends_on:
      - php-fpm

  php-fpm:
    image: php:fpm@sha256:231ab3ac3db542e1d019a35abee1bd106d278a5712d1dc2bb4fbe103de016792
    mem_limit: 512m
    container_name: hatest-php-fpm
    volumes:
      - ./components/php/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./components/php/php.ini:/usr/local/etc/php/php.ini
      - ./components/php/:/var/www/html
      - php_socket:/var/run/
    environment:
      PM_STRATEGY: static
      PM_MAX_CHILDREN: 100
      PM_MAX_REQUESTS: 500
      PM_REQUEST_TERMINATE_TIMEOUT: 5s
      PHP_MEM_USED_IN_MB: 1
      PHP_EXECUTION_TIME_IN_SECONDS: 1
      PM_CHILDREN_MEMORY_LIMIT: 50M
      PM_START_SERVERS: 10
      PM_MIN_SPARE_SERVERS: 5
      PM_MAX_SPARE_SERVERS: 20
      PM_PROCESS_IDLE_TIMEOUT: 10s

  autoinstrumenter:
    build:
      context: ../..
      dockerfile: ./test/integration/components/beyla/Dockerfile
    command:
      - --config=/configs/instrumenter-config-php.yml
    volumes:
      - ./configs/:/configs
      - ./system/sys/kernel/security:/sys/kernel/security
      - ../../testoutput:/coverage
      - ../../testoutput/run-php:/var/run/beyla
    image: hatest-javaautoinstrumenter
    privileged: true # in some environments (not GH Pull Requests) you can set it to false and then cap_add: [ SYS_ADMIN ]
    network_mode: "host"
    pid: "host"
    environment:
      GOCOVERDIR: "/coverage"
      BEYLA_TRACE_PRINTER: "text"
      BEYLA_EXECUTABLE_NAME: "nginx|php-fpm"
      BEYLA_SERVICE_NAMESPACE: "integration-test"
      BEYLA_METRICS_INTERVAL: "10ms"
      BEYLA_BPF_BATCH_TIMEOUT: "10ms"
      BEYLA_LOG_LEVEL: "DEBUG"
      BEYLA_BPF_DEBUG: "TRUE"
      BEYLA_HOSTNAME: "beyla"
      BEYLA_OTLP_TRACES_BATCH_TIMEOUT: "1ms"
    depends_on:
      nginx:
        condition: service_started

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.104.0@sha256:e07e325e303e86f4a87a617491e921b579a92da6d404007394757ac910bf9587
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: ["--config=/etc/otelcol-config/otelcol-config-4017.yml"]
    volumes:
      - ./configs/:/etc/otelcol-config
    ports:
      - "4017" # OTLP over gRPC receiver
      - "4018:4018" # OTLP over HTTP receiver
      - "9464" # Prometheus exporter
      - "8888" # metrics endpoint
    depends_on:
      prometheus:
        condition: service_started

  # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.55.1@sha256:2659f4c2ebb718e7695cb9b25ffa7d6be64db013daba13e05c875451cf51b0d3
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus-config.yml
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --log.level=debug
    volumes:
      - ./configs/:/etc/prometheus
    ports:
      - "9090:9090"

  jaeger:
    image: jaegertracing/all-in-one:1.57@sha256:8f165334f418ca53691ce358c19b4244226ed35c5d18408c5acf305af2065fb9
    ports:
      - "16686:16686" # Query frontend
      - "4317:4317" # OTEL GRPC traces collector
      - "4318:4318" # OTEL HTTP traces collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug

volumes:
  nginx_socket:
  php_socket:
