global:
  evaluation_interval: 5s
  scrape_interval: 5s
scrape_configs:
  - job_name: beyla-network-flows
    honor_labels: true
    static_configs:
      - targets:
          # Configuration for the K8s decoration tests in kind, where Prometheus must scrape
          # from two different endpoints
          - 'beyla-testserver:8999'
          - 'beyla-pinger:8999'
          - 'beyla-netolly:8999'
          - 'beyla-promscrape:8999'
          - 'k8s-cache:8999'
  # Scrape config for service endpoints.
  #
  # The relabeling allows the actual service scrape endpoint to be configured
  # via the following annotations:
  #
  # * `prometheus.io/scrape`: Only scrape services that have a value of `true`
  # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
  # * `prometheus.io/port`: If the metrics are exposed on a different port to the
  #   service then set this appropriately.
  - job_name: 'beyla-network-flows-scrape'
    honor_labels: true
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      # select only those pods that has "prometheus.io/scrape: true" annotation
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
        # set metrics_path (default is /metrics) to the metrics path specified in "prometheus.io/path: <metric path>" annotation.
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
        # set the scrapping port to the port specified in "prometheus.io/port: <port>" annotation and set address accordingly.
      - source_labels: [ "__address__", "__meta_kubernetes_pod_annotation_prometheus_io_port"]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
