version: '3.8'

services:
  testserver:
    build:
      context: ../..
      dockerfile: test/integration/components/elixir/Dockerfile
    image: hatest-testserver-elixir
    ports:
      - "4000:4000"
    depends_on:
      otelcol:
        condition: service_started

  autoinstrumenter:
    build:
      context: ../..
      dockerfile: ./test/integration/components/beyla/Dockerfile
    command:
      - --config=/configs/instrumenter-config-elixir.yml
    volumes:
      - ./configs/:/configs
      - ./system/sys/kernel/security:/sys/kernel/security
      - ../../testoutput:/coverage
      - ../../testoutput/run:/var/run/beyla
    image: hatest-autoinstrumenter
    privileged: true # in some environments (not GH Pull Requests) you can set it to false and then cap_add: [ SYS_ADMIN ]
    network_mode: "service:testserver"
    pid: "service:testserver"
    environment:
      GOCOVERDIR: "/coverage"
      BEYLA_PRINT_TRACES: "true"
      BEYLA_OPEN_PORT: "4000"
      BEYLA_DISCOVERY_POLL_INTERVAL: 500ms
      BEYLA_SERVICE_NAMESPACE: "integration-test"
      BEYLA_METRICS_INTERVAL: "10ms"
      BEYLA_BPF_BATCH_TIMEOUT: "10ms"
      BEYLA_LOG_LEVEL: "DEBUG"
      BEYLA_BPF_DEBUG: "TRUE"
      BEYLA_METRICS_REPORT_TARGET: "true"
      BEYLA_METRICS_REPORT_PEER: "true"
      BEYLA_HOSTNAME: "beyla"
    depends_on:
      testserver:
        condition: service_started

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.85.0
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config/otelcol-config.yml" ]
    volumes:
      - ./configs/:/etc/otelcol-config
    ports:
      - "4317"          # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
    depends_on:
      prometheus:
        condition: service_started

  # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.46.0
    container_name: prometheus
    command:
      - --storage.tsdb.retention.time=1m
      - --config.file=/etc/prometheus/prometheus-config.yml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
    volumes:
      - ./configs/:/etc/prometheus
    ports:
      - "9090:9090"
