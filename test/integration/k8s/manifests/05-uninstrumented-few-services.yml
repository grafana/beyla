---
apiVersion: v1
kind: Service
metadata:
  name: testserver
spec:
  selector:
    app: testserver
  ports:
    - port: 8080
      name: http0
      targetPort: http0
---
apiVersion: v1
kind: Service
metadata:
  name: pytestserver
spec:
  selector:
    app: pytestserver
  ports:
    - port: 8083
      name: http1
      targetPort: http1
---
apiVersion: v1
kind: Service
metadata:
  name: utestserver
spec:
  selector:
    app: utestserver
  ports:
    - port: 3040
      name: http2
      targetPort: http2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pytestserver
  labels:
    app: pytestserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pytestserver
  template:
    metadata:
      name: pytestserver
      labels:
        app: pytestserver
    spec:
      affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: deployment/zone
                  operator: In
                  values:
                  - other-progs
      containers:
        - name: pytestserver
          image: pythontestserver:dev
          imagePullPolicy: Never # loaded into Kind from localhost
          ports:
            - containerPort: 8083
              hostPort: 8083
              name: http1
          env:
            - name: LOG_LEVEL
              value: "DEBUG"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=mypythonapp"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testserver
  labels:
    app: testserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: testserver
  template:
    metadata:
      name: testserver
      labels:
        app: testserver
    spec:
      affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: deployment/zone
                  operator: In
                  values:
                  - go-progs
      containers:
        - name: testserver
          image: testserver:dev
          imagePullPolicy: Never # loaded into Kind from localhost
          ports:
            - containerPort: 8080
              hostPort: 8080
              name: http0
          env:
            - name: LOG_LEVEL
              value: "DEBUG"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: utestserver
  labels:
    app: utestserver
spec:
  selector:
    matchLabels:
      app: utestserver
  template:
    metadata:
      labels:
        app: utestserver
    spec:
      # hostNetwork: true
      # dnsPolicy: ClusterFirstWithHostNet
      affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: deployment/zone
                  operator: In
                  values:
                  - other-progs
      containers:
        - name: utestserver
          image: 'ghcr.io/grafana/beyla-test/greeting-rails/0.0.1'
          imagePullPolicy: Always
          ports:          
          - containerPort: 3040
            hostPort: 3040
            name: http2
          volumeMounts:
          - name: tmp-rails
            mountPath: /tmp
      volumes:
      - name: tmp-rails
        emptyDir: {}      
---          