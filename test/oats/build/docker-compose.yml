name: oats
services:
  autoinstrumenter:
    build:
      context: /home/nino/work/beyla
      dockerfile: ./test/integration/components/beyla/Dockerfile
    cap_add:
    - SYS_ADMIN
    command:
    - /beyla
    - --config=/configs/instrumenter-config-traces.yml
    depends_on:
      testserver:
        condition: service_started
        required: true
    environment:
      BPF_BATCH_TIMEOUT: 10ms
      LOG_LEVEL: DEBUG
      METRICS_INTERVAL: 10ms
      OPEN_PORT: "8080"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://collector:4318
      PRINT_TRACES: "true"
      SERVICE_NAMESPACE: integration-test
    network_mode: service:testserver
    pid: service:testserver
    privileged: true
    volumes:
    - type: bind
      source: /home/nino/work/beyla/test/oats/configs
      target: /configs
      bind:
        create_host_path: true
    - type: bind
      source: /home/nino/work/beyla/test/oats/testoutput/run
      target: /var/run/beyla
      bind:
        create_host_path: true
  collector:
    command:
    - --config=file:/config.yaml
    - --feature-gates=-pkg.translator.prometheus.NormalizeName
    image: otel/opentelemetry-collector-contrib:0.85.0
    networks:
      default: null
    volumes:
    - type: bind
      source: /home/nino/work/beyla/test/oats/configs/otelcol-config.yaml
      target: /config.yaml
      bind:
        create_host_path: true
  grafana:
    image: grafana/grafana:10.0.5
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3000
      published: "3000"
      protocol: tcp
    volumes:
    - type: bind
      source: /home/nino/work/beyla/test/oats/configs/grafana-datasources.yaml
      target: /etc/grafana/provisioning/datasources/grafana-datasources.yaml
      bind:
        create_host_path: true
  prometheus:
    command:
    - --web.enable-remote-write-receiver
    - --enable-feature=exemplar-storage
    - --enable-feature=native-histograms
    - --config.file=/etc/prometheus/prometheus.yml
    image: prom/prometheus:v2.47.0
    networks:
      default: null
    ports:
    - mode: ingress
      target: 9090
      published: "9090"
      protocol: tcp
  tempo:
    command:
    - --config.file=/config.yaml
    image: grafana/tempo:2.2.3
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3200
      published: "3200"
      protocol: tcp
    volumes:
    - type: bind
      source: /home/nino/work/beyla/test/oats/configs/tempo-config.yaml
      target: /config.yaml
      bind:
        create_host_path: true
  testserver:
    build:
      context: /home/nino/work/beyla/test/integration/components/sqlclient
      dockerfile: Dockerfile
    image: gosqlclient
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
networks:
  default:
    name: oats_default
