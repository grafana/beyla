services:
  # GRPC server
  grpcsrv:
    build:
      context: ../../integration/components/pythongrpc
      dockerfile: Dockerfile_srv
    image: grpcsrv
    ports:
      - "50051:50051"
  # Simple python HTTP server, which exposes one endpoint /query that calls the GRPC server
  testserver:
    build:
      context: ../../integration/components/pythongrpc
      dockerfile: Dockerfile
    image: grpclient
    ports:
      - "8080:8080"
  # eBPF auto instrumenter
  autoinstrumenter:
    build:
      context: ../../..
      dockerfile: ./test/integration/components/beyla/Dockerfile
    command:
      - --config=/configs/instrumenter-config-python-grpc.yml
    volumes:
      - {{ .ConfigDir }}:/configs
      - ./testoutput/run:/var/run/beyla
      - ../../../testoutput:/coverage
      - /sys/fs/cgroup:/sys/fs/cgroup
    privileged: true # in some environments (not GH Pull Requests) you can set it to false and then cap_add: [ SYS_ADMIN ]
    network_mode: "service:testserver"
    pid: "service:testserver"
    environment:
      GOCOVERDIR: "/coverage"
      BEYLA_TRACE_PRINTER: "text"
      BEYLA_OPEN_PORT: {{ .ApplicationPort }}
      BEYLA_SERVICE_NAMESPACE: "integration-test"
      BEYLA_METRICS_INTERVAL: "10ms"
      BEYLA_BPF_BATCH_TIMEOUT: "10ms"
      BEYLA_LOG_LEVEL: "DEBUG"
      BEYLA_BPF_DEBUG: "true"
      BEYLA_BPF_ENABLE_CONTEXT_PROPAGATION: "true"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4318"
    depends_on:
      testserver:
        condition: service_started
