services:
  zookeeper:
    restart: always
    container_name: kafka-like-zookeeper
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    restart: always
    container_name: kafka-like
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
      - "9092:9092"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  # Simple python HTTP server, which exposes one endpoint /message that does Kafka query
  testserver:
    build:
      context: ../../integration/components/pythonkafka
      dockerfile: Dockerfile
    image: pythonkafka
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_started
  # eBPF auto instrumenter
  autoinstrumenter:
    build:
      context: ../../..
      dockerfile: ./test/integration/components/beyla/Dockerfile
    command:
      - --config=/configs/instrumenter-config-traces.yml
    volumes:
      - {{ .ConfigDir }}:/configs
      - ./testoutput/run:/var/run/beyla
      - ../../../testoutput:/coverage
    privileged: true # in some environments (not GH Pull Requests) you can set it to false and then cap_add: [ SYS_ADMIN ]
    network_mode: "service:testserver"
    pid: "service:testserver"
    environment:
      GOCOVERDIR: "/coverage"
      BEYLA_PRINT_TRACES: "true"
      BEYLA_OPEN_PORT: {{ .ApplicationPort }}
      BEYLA_SERVICE_NAMESPACE: "integration-test"
      BEYLA_METRICS_INTERVAL: "10ms"
      BEYLA_BPF_BATCH_TIMEOUT: "10ms"
      BEYLA_LOG_LEVEL: "DEBUG"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4318"
    depends_on:
      testserver:
        condition: service_started
volumes:
  kafka-volume:
  zookeeper-volume: